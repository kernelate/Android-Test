package com.ntek.wallpad.Screens.Fragment;


import java.util.ArrayList;

import android.app.Fragment;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Typeface;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.Filter.FilterListener;
import android.widget.ListView;
import android.widget.TextView;

import com.ntek.wallpad.R;
import com.ntek.wallpad.Utils.ContactAdapter;
import com.ntek.wallpad.Utils.ContactAdapter.FilterType;
import com.ntek.wallpad.Utils.ContactOptionDialogFragment;
import com.ntek.wallpad.Utils.Contacts;

public class FragmentPhoneContactList extends Fragment implements OnClickListener {

	private static final String TAG = FragmentPhoneContactList.class.getCanonicalName();
	public static final int ALL_TAB = 2; 
	public static final int CLIENT_TAB = 1; 
	public static final int DOORTALK_TAB = 0;
	private Button btnAll;
	private Button btnPhone;
	private Button btnSecurity;
	private Button btnCurrentTab;
	private ListView lstContactList;
	private TextView noContactCaptionTextView;
	private ContactAdapter adapter;
	private static int selectedTab = 1;
	public static Contacts selectedContact;
	private BroadcastReceiver broadcastReceiver;
	private View view;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) 
	{
		Log.d(TAG, "onCreateView()");
		view = inflater.inflate(R.layout.fragment_phone_contact_list, container, false);
		initializeUI();
		return view;
	}

	private void initializeUI()
	{
		btnAll = (Button) view.findViewById(R.id.phone_contacts_button_all);
		btnPhone = (Button) view.findViewById(R.id.phone_contacts_button_phone);
		btnSecurity = (Button) view.findViewById(R.id.phone_contacts_button_security);
		lstContactList = (ListView) view.findViewById(R.id.phone_contacts_listview_contactlist);
		noContactCaptionTextView = (TextView) view.findViewById(R.id.no_contact_caption_text_view);
		
		adapter =  ContactAdapter.getContactAdapter(getActivity());
		lstContactList.setAdapter(adapter);
		
		lstContactList.setOnItemClickListener(onItemClickListener);
		lstContactList.setOnItemLongClickListener(contactListItemLongClick);
		
		btnAll.setOnClickListener(this);
		btnPhone.setOnClickListener(this);
		btnSecurity.setOnClickListener(this);
		
		broadcastReceiver = new BroadcastReceiver() {
			@Override
			public void onReceive(Context context, Intent intent) {
				boolean setSelected = false;
				ArrayList<Contacts> contactList = adapter.getList();
				for(int i = 0; i < contactList.size(); i++) {
					if(selectedContact.getPhoneNumber() == contactList.get(i).getPhoneNumber()) {
						lstContactList.performItemClick(lstContactList.getChildAt(i), i, lstContactList.getItemIdAtPosition(i));
						setSelected = true;
						break;
					}
				}
				if(!setSelected) setSelected(intent.getIntExtra("count", -1));
			}
		};
		
		Typeface font = Typeface.createFromAsset(getActivity().getAssets(), "fonts/OpenSansSemibold.ttf");
		noContactCaptionTextView.setTypeface(font);
		btnAll.setTypeface(font);
		btnPhone.setTypeface(font);
		btnSecurity.setTypeface(font);
		
		btnCurrentTab = btnAll;
		btnAll.performClick();
	}

	public void setSelected(int count) {
		if(count > 0) lstContactList.performItemClick(lstContactList.getChildAt(0), 0, lstContactList.getItemIdAtPosition(0));
		else setContactInfo(-1);
	}
	
	public int getSelectedTab() {
		return selectedTab; 
	}
	
	private void setSelectedTab(Button button, int tab)
	{
		selectedTab = tab;
		btnCurrentTab.setBackgroundColor(0xFFFFFFFF);
		btnCurrentTab = button;
		btnCurrentTab.setBackgroundResource(R.drawable.border_selected_subtab);
	}

	@Override
	public void onClick(View v)
	{
		switch (v.getId())
		{
		case R.id.phone_contacts_button_all:
			setSelectedTab(btnAll, ALL_TAB);
			adapter.getFilter().filter(FilterType.All.toString(), new FilterListener() {
				@Override
				public void onFilterComplete(int count) {
					setSelected(count);
				}
			});
			break;
			
		case R.id.phone_contacts_button_phone:
			setSelectedTab(btnPhone, CLIENT_TAB);
			adapter.getFilter().filter(FilterType.Phone.toString(), new FilterListener() {
				@Override
				public void onFilterComplete(int count) {
					setSelected(count);
				}
			});
			break;
			
		case R.id.phone_contacts_button_security:
			setSelectedTab(btnSecurity, DOORTALK_TAB);
			adapter.getFilter().filter(FilterType.Security.toString(), new FilterListener() {
				@Override
				public void onFilterComplete(int count) {
					setSelected(count);
				}
			});
			break;

		default:
			break;
		}
	}
	
	public void setContactInfo(int position) {
		Fragment rightPanel = getFragmentManager().findFragmentById(R.id.phone_rightpanel);
		if(rightPanel instanceof FragmentPhoneContactInformation) {
			FragmentPhoneContactInformation contactInfoFragment = (FragmentPhoneContactInformation) rightPanel;
			if(position < 0) {
				showContactList(false);
				contactInfoFragment.setContactInformation(null);
			} else {
				showContactList(true);
				selectedContact = adapter.getItem(position);
				Contacts contact = (Contacts) selectedContact;
				contactInfoFragment.setContactInformation(Integer.toString(contact.getPhoneNumber()));
			}
		}
	}
	
	private void showContactList(boolean show) {
		lstContactList.setVisibility(show ? View.VISIBLE: View.INVISIBLE);
		noContactCaptionTextView.setVisibility(show ? View.INVISIBLE: View.VISIBLE);
		switch (getSelectedTab()) {
		default:
		case 1:
			noContactCaptionTextView.setText("When you add a client, you'll see your contacts here.");
			break;
		case 2:
			noContactCaptionTextView.setText("When you add a client or security device, you'll see your contacts here.");
			break;
		case 0:
			noContactCaptionTextView.setText("When you add a security device, you'll see your contacts here.");
			break;
		}
	}
	
	private OnItemClickListener onItemClickListener = new OnItemClickListener() {

		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position,
				long id) {
			adapter.setSelectedItem(position);
			adapter.notifyDataSetChanged();
			setContactInfo(position);
		}
	};
	
	AdapterView.OnItemLongClickListener contactListItemLongClick = new AdapterView.OnItemLongClickListener() {

		@Override
		public boolean onItemLongClick(AdapterView<?> arg0, View arg1,
				int arg2, long arg3) {
			Bundle bundle = new Bundle();
			bundle.putParcelable("contact", (Contacts) adapter.getItem(arg2));
			ContactOptionDialogFragment optionDialogFragment = new ContactOptionDialogFragment();
			optionDialogFragment.setArguments(bundle);
			optionDialogFragment.show(getFragmentManager(), "option");
			return false;
		}
	};
	
	@Override
	public void onResume() {
		super.onResume();
		Log.d(TAG, "onResume()");
		final IntentFilter intentFilter = new IntentFilter();
		intentFilter.addAction("com.ntek.wallpad.CONTACT_UPDATE");
		getActivity().registerReceiver(broadcastReceiver, intentFilter);
	}
	
	@Override
	public void onPause() {
		super.onPause();
		Log.d(TAG, "onPause()");
		if (broadcastReceiver != null) {
			getActivity().unregisterReceiver(broadcastReceiver);
		}
	}
}
